---
import BaseLayout from '../layouts/BaseLayout.astro';
import Topic from '../components/Topic.astro';
import BlogPostInTopic from '../components/BlogPostInTopic.astro';

const pageTitle = '';

const allPosts = await Astro.glob('./posts/*.md');
const topics = [
	{
		id: 'New',
		name: 'âœ¨ New'
	},
	{
		id: 'Tutorials',
		name: 'ðŸš€ Tutorials'
	}
];

let newPosts = allPosts.sort((post1, post2) => {
    const date1 = new Date(post1.frontmatter.pubDate).getTime();
    const date2 = new Date(post2.frontmatter.pubDate).getTime();
    if (isNaN(date1) || isNaN(date2)) {
        console.warn("Invalid date format in posts:", post1, post2);
        return 0;
    }
    return date2 - date1;
}).slice(0, 2);

const postReviews = topics.map(topic => {

	if(topic.id === 'New'){
		return {
			topicId: topic.id,
			topicName:	topic.name,
			posts: newPosts.map(({url, frontmatter: {title, description, pubDate}})=>(
				{
					url,
					title,
					description,
					pubDate
				}
			))
		};
	}
	
	let posts = allPosts.filter(post => post.frontmatter.topics?.includes(topic.id.toLowerCase()));
	return {
		topicId: topic.id,
		topicName:	topic.name,
		posts: posts.map(({url, frontmatter: {title, description, pubDate}})=>(
			{
				url,
				title,
				description,
				pubDate
			}
		))
	};
});
---
<BaseLayout pageTitle={pageTitle}>
	<div style="padding:3rem 0;">
		<i>I share about Backend, Engineer and some thoughts in Product and Life ðŸ˜´</i>
	</div>
	<div>
		{topics.map(topic => <Topic url={`/#${topic.id}`} title={`${topic.name}`}/>)}
	</div>
	<div>
		{postReviews.map(postReview => <BlogPostInTopic topicId={postReview.topicId}
													topicName={postReview.topicName}
													posts={postReview.posts}
												/>)}
	</div>
</BaseLayout>